#Использовать v8runner
#Использовать logos

Перем Лог;
Перем УправлениеКонфигуратором;

Функция ОбеспечитьКаталог(Знач Каталог)
	
	Файл = Новый Файл(Каталог);
	Если Не Файл.Существует() Тогда
		Попытка 
			СоздатьКаталог(Каталог);
		Исключение
			Лог.Ошибка(СтрШаблон(НСтр("ru='Не удалось создать каталог %1.
|%2';en='Failed to create directory %1.
|%2'"), Каталог, ИнформацияОбОшибке()));
			Возврат Ложь;
		КонецПопытки;
	ИначеЕсли Не Файл.ЭтоКаталог() Тогда 
		Лог.Ошибка(СтрШаблон(НСтр("ru='Каталог %1 не является каталогом.';en='Directory %1 is not a directory.'"), Каталог));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ЗаписатьОбъектJSON(ДанныеJSON) Экспорт

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеJSON);
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

Функция ПараметрыСборки(ИмяФайлаПараметров)
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ИмяФайлаПараметров);
	Параметры = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Возврат Параметры;
	
КонецФункции                                               

Процедура ОчиститьКаталог(Путь)
	Файлы = НайтиФайлы(Путь, "*", Истина);
	Для Каждого Файл Из Файлы Цикл
		Попытка
			УдалитьФайлы(Файл.ПолноеИмя);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьСтрокуЗапускаСборки(ПараметрыСборки, ИмяФайлаПараметрыVA)
	Стр = """" + ПараметрыСборки.Path1c + """";
	Стр = Стр + " " + ПараметрыСборки.ConnectionString;
	
	ПутьКVanessaAutomation = ОбъединитьПути(ПараметрыСборки.VAPath, "vanessa-automation.epf");
	
	Стр = Стр + " /Execute """ + ПутьКVanessaAutomation + """ /C""StartFeaturePlayer;UseEditor;ShowMainForm;workspaceRoot=%workspaceRoot%;DisableLoadConfig;DisableUserSettingsLoader;VAParams=" + ИмяФайлаПараметрыVA + """";
	
	Стр = СтрЗаменить(Стр,"%workspaceRoot%",ПараметрыСборки.VAPath);

	Возврат Стр;
КонецФункции

Процедура СоздатьФайлыУроковПоФиче(ИмяФайлаФичи, ИмяКаталога, Параметры)
	
	Файл = Новый Файл(Параметры.ResultPath);
	Если НЕ Файл.Существует() Тогда
		ВызватьИсключение "Неверно передан параметр ResultPath: " + Параметры.ResultPath;
	КонецЕсли;	
	
	ВременныйКаталогАртефактов = ОбъединитьПути(Параметры.ResultPath, "temp");
	ОбеспечитьКаталог(ВременныйКаталогАртефактов);
	ОчиститьКаталог(ВременныйКаталогАртефактов);
	
	ПараметрыVA = Новый Структура;
	ПараметрыVA.Вставить("КаталогФич", ИмяФайлаФичи);
	ПараметрыVA.Вставить("ИспользоватьКомпонентуVanessaExt", Истина);
	ПараметрыVA.Вставить("ВыполнитьСценарии", Истина);
	ПараметрыVA.Вставить("ВыгружатьСтатусВыполненияСценариевВФайл", Истина);
	ПараметрыVA.Вставить("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", ОбъединитьПути(ВременныйКаталогАртефактов, "status.txt"));
	
	Для Каждого КлючЗначение Из Параметры Цикл
		ПараметрыVA.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;	
	
	ИмяФайлаПараметрыVA = ОбъединитьПути(ВременныйКаталогАртефактов, "VAParams.json");
	
	ЗаписьJson = Новый ЗаписьJson();
	ЗаписьJson.ОткрытьФайл(ИмяФайлаПараметрыVA);
	ЗаписатьJSON(ЗаписьJson, ПараметрыVA); 
	ЗаписьJson.Закрыть(); 
	
	СтрокаЗапускаСборки = ПолучитьСтрокуЗапускаСборки(Параметры, ИмяФайлаПараметрыVA);
	Сообщить(СтрокаЗапускаСборки);
	
КонецПроцедуры

Процедура СоздатьУрокиПоКаталогуФич(КаталогФич, Параметры)
	Файл = Новый Файл(КаталогФич);
	ИмяКаталога = Файл.Имя;
	
	Файлы = НайтиФайлы(КаталогФич, "*.feature", Истина);
	Для Каждого Файл Из Файлы Цикл
		Сообщить("Работа по фиче: " + Файл.ПолноеИмя);
		
		СоздатьФайлыУроковПоФиче(Файл.ПолноеИмя, ИмяКаталога, Параметры);
		
		Прервать;
	КонецЦикла;	
	
КонецПроцедуры

Процедура СгенерироватьФайлыСправки(Параметры, КаталогУроков)
	ТаблицаГлав = Новый ТаблицаЗначений;
	ТаблицаГлав.Колонки.Добавить("ПолноеИмя");
	ТаблицаГлав.Колонки.Добавить("Имя");
	
	Файлы = НайтиФайлы(КаталогУроков, "*", Ложь);
	Для Каждого Файл Из Файлы Цикл
		Если Найти(НРег(Файл.Имя), "глава 02") = 0 Тогда
			Продолжить;
		КонецЕсли;	   
		
		СтрокаТаблицаГлав = ТаблицаГлав.Добавить();
		СтрокаТаблицаГлав.ПолноеИмя = Файл.ПолноеИмя;
		СтрокаТаблицаГлав.Имя = Файл.Имя;
	КонецЦикла;	
	
	ТаблицаГлав.Сортировать("Имя");
	
	Для Каждого СтрокаТаблицаГлав Из ТаблицаГлав Цикл
		Сообщить("Создание уроков по главе: " + СтрокаТаблицаГлав.Имя);
		
		СоздатьУрокиПоКаталогуФич(СтрокаТаблицаГлав.ПолноеИмя, Параметры);
		
		Сообщить("ПОТОМ УБРАТЬ!!!");
		Прервать;
	КонецЦикла;	
	
КонецПроцедуры

Процедура СборкаСправки(ИмяФайлаПараметров)
	
	Параметры = ПараметрыСборки(ИмяФайлаПараметров);
	КаталогУроков = ОбъединитьПути(Параметры.VAPath, "training","features");
	СгенерироватьФайлыСправки(Параметры, КаталогУроков);
	
КонецПроцедуры

Лог = Логирование.ПолучитьЛог("vb.compile.log");
Лог.УстановитьУровень(УровниЛога.Отладка);


Если АргументыКоманднойСтроки.Количество() = 0 Тогда
	Лог.Ошибка("Не переданы параметры!");
ИначеЕсли АргументыКоманднойСтроки.Количество() <> 1 Тогда
	Лог.Ошибка("Скрипт принимает только один параметр!");
Иначе
	СборкаСправки(АргументыКоманднойСтроки[0]);
КонецЕсли;

