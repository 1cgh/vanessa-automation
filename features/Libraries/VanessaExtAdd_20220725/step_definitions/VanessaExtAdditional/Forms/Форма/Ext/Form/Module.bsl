
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРисуюРамкуПоКоординатам(Парам01,Парам02,Парам03,Парам04,ТабПарам)","ЯРисуюРамкуПоКоординатам","И Я рисую рамку по координатам ""542"" ""153"" ""34"" ""34""
										|        |'Цвет'      | 'Красный'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |",
										"Отрисовка рамки по координатам ""ТочкаX"" ""ТочкаY"" ""Длина"" ""Ширина"". Также указывается цвет рамки, задержка итд. Пример: 
										|И Я рисую рамку по координатам ""542"" ""153"" ""34"" ""34""
										|        |'Цвет'      | 'Красный'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |",
										"Прочее.VanessaExt.Фигуры по координатам");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРисуюЭллипсПоКоординатам(Парам01,Парам02,Парам03,Парам04,ТабПарам)","ЯРисуюЭллипсПоКоординатам","И Я рисую эллипс по координатам ""542"" ""153"" ""34"" ""34""
										|        |'Цвет'      | 'Красный'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |",
										"Отрисовка эллипса (овала) по координатам ""ТочкаX"" ""ТочкаY"" ""Длина"" ""Ширина"". Также указывается цвет рамки, задержка итд. Пример: 
										|И Я рисую эллипс по координатам ""542"" ""153"" ""34"" ""34""
										|        |'Цвет'      | 'Красный'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |"
										,"Прочее.VanessaExt.Фигуры по координатам");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРисуюТеньПоКоординатамТекстНадписи(Парам01,Парам02,Парам03,Парам04,ТекстНадписи,ТабПарам)","ЯРисуюТеньПоКоординатамТекстНадписи","И Я рисую тень по координатам ""100"" ""100"" ""1000"" ""400"" текст надписи ""Текст подсказки""
										|        |'Цвет'      | 'Красный'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |",
										"Отображение затенения прямоугольником по координатам ""ТочкаX"" ""ТочкаY"" ""Длина"" ""Ширина"" с подсказкой в виде текста. Также указывается цвет рамки, задержка итд. Пример: 
										|И Я рисую тень по координатам ""100"" ""100"" ""1000"" ""400"" текст надписи ""Текст подсказки""
										|        |'Цвет'      | 'Красный'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |"
										,"Прочее.VanessaExt.Фигуры по координатам");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРисуюНадписьПоТочкамТекстНадписи(Парам01,Парам02,ТекстНадписи,ТабПарам)","ЯРисуюНадписьПоТочкамТекстНадписи","И Я рисую надпись по точкам ""100"" ""150"" текст надписи ""Привет Мир!""
										|        |'ЦветШрифта'      | 'Красный'    |
										|        |'РазмерШрифта'      | '14'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |",
										"Отрисовка надписи цветом на экране в позиции ""ТочкаX"" ""ТочкаX"" текст надписи ""Текст подсказки"". Также указывается цвет текста, размер шрифта итд. Пример: 
										|И Я рисую надпись по точкам ""100"" ""150"" текст надписи ""Привет Мир!""
										|        |'ЦветШрифта'      | 'Красный'    |
										|        |'РазмерШрифта'      | '14'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |"
										,"Прочее.VanessaExt.Фигуры по координатам");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРисуюПодсказку_балонПоТочкамТекстНадписи(Парам01,Парам02,Парам03,ТабПарам)","ЯРисуюПодсказку_балонПоТочкамТекстНадписи","И Я рисую подсказку-балон по точкам ""100"" ""150"" текст надписи ""Привет Мир!""
										|        |'ЦветШрифта'      | 'Красный'    |
										|        |'РазмерШрифта'      | '14'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |",
										"Отрисовка подсказки в виде облака с надписью на экране в позиции ""ТочкаX"" ""ТочкаX"" текст надписи ""Текст подсказки"". Также указывается цвет текста, размер шрифта итд. Пример: 
										|И Я рисую подсказку-балон по точкам ""100"" ""150"" текст надписи ""Привет Мир!""
										|        |'ЦветШрифта'      | 'Красный'    |
										|        |'РазмерШрифта'      | '14'    |
										|        |'Длительность'  | '2000'       |
										|        |'Прозрачность'   | '127'         |
										|        |'Толщина'     | '2'         |"
										,"Прочее.VanessaExt.Фигуры по координатам");

	Возврат ВсеТесты;
КонецФункции
	
// Делает отключение модуля
Процедура ОтключениеМодуля() Экспорт
	
	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;
	
КонецПроцедуры
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции

#КонецОбласти


&НаКлиенте
Функция ПустоеОповещениеСПродолжениемВыполненияСценария(Парам1, Парам2, ДопПараметры) Экспорт
	Если ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("ИмяОбработчика") Тогда
		Если ДопПараметры.ИмяОбработчика <> "НеВыполнятьОбработчик" Тогда
			ПодключитьОбработчикОжидания(ДопПараметры.ИмяОбработчика, 0.1, Истина);
		КонецЕсли;	
	Иначе
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;
КонецФункции 

&НаКлиенте
Функция ПараметрыРисования(ТабПарам)

	ПереданныеПараметры = ПереданныеПараметры(ТабПарам);
	АбсолютныйЦвет = ПолучитьАбсолютныйЦветИзПараметров(ПереданныеПараметры, "Цвет", "Color");
	
	Если ПереданныеПараметры.Свойство("Толщина") Тогда
		Толщина = ПереданныеПараметры.Толщина;
	ИначеЕсли ПереданныеПараметры.Свойство("Width") Тогда
		Толщина = ПереданныеПараметры.Width;
	Иначе
		Толщина = "3";
	КонецЕсли;
	
	Если ПереданныеПараметры.Свойство("Длительность") Тогда
		Длительность = ПереданныеПараметры.Длительность;
	ИначеЕсли ПереданныеПараметры.Свойство("Duration") Тогда
		Длительность = ПереданныеПараметры.Duration;
	Иначе
		Длительность = "10000";
	КонецЕсли;	 
	
	Если ПереданныеПараметры.Свойство("Прозрачность") Тогда
		Прозрачность = ПереданныеПараметры.Длительность;
	ИначеЕсли ПереданныеПараметры.Свойство("Transparency") Тогда
		Прозрачность = ПереданныеПараметры.Transparency;
	Иначе
		Прозрачность = "255";
	КонецЕсли;	 
	
	Если ПереданныеПараметры.Свойство("Задержка") Тогда
		Задержка = ПереданныеПараметры.Длительность;
	ИначеЕсли ПереданныеПараметры.Свойство("frameDelay") Тогда
		Задержка = ПереданныеПараметры.Transparency;
	Иначе
		Задержка = "20";
	КонецЕсли;	 
	
	ЦветШрифта = ПолучитьАбсолютныйЦветИзПараметров(ПереданныеПараметры, "ЦветШрифта", "fontColor");
	
	Если ПереданныеПараметры.Свойство("Шрифт") Тогда
		Шрифт = ПереданныеПараметры.Шрифт;
	ИначеЕсли ПереданныеПараметры.Свойство("font") Тогда
		Шрифт = ПереданныеПараметры.font;
	Иначе
		Шрифт = "Calibri";
	КонецЕсли;	 
	
	Если ПереданныеПараметры.Свойство("РазмерШрифта") Тогда
		РазмерШрифта = ПереданныеПараметры.РазмерШрифта;
	ИначеЕсли ПереданныеПараметры.Свойство("fontsize") Тогда
		РазмерШрифта = ПереданныеПараметры.fontsize;
	Иначе
		РазмерШрифта = "12";
	КонецЕсли;	 

	ПараметрыРисования = Новый Структура;
	ПараметрыРисования.Вставить("color", Ванесса.ЦветЧислом(АбсолютныйЦвет));
	ПараметрыРисования.Вставить("transparency", Число(Прозрачность));
	ПараметрыРисования.Вставить("duration", Число(Длительность));
	ПараметрыРисования.Вставить("frameDelay", Число(Задержка));
	ПараметрыРисования.Вставить("thickness", Число(Толщина));
	ПараметрыРисования.Вставить("fontName", Шрифт);
	ПараметрыРисования.Вставить("fontSize", Число(РазмерШрифта));
	ПараметрыРисования.Вставить("fontColor", Ванесса.ЦветЧислом(ЦветШрифта));
	
	Возврат ПараметрыРисования;
	
КонецФункции 

&НаКлиенте
Функция ПереданныеПараметры(ТабПарам)
	Структура = Новый Структура;
	Для Каждого СтрокаТабПарам Из ТабПарам Цикл
		Попытка
			Структура.Вставить(СтрокаТабПарам.Кол1, СтрокаТабПарам.Кол2);
		Исключение
			Ванесса.СообщитьПользователю(Ванесса.Локализовать(ОписаниеОшибки()));
		КонецПопытки;
	КонецЦикла;	 
	
	Возврат Структура;
КонецФункции	

&НаКлиенте
// Получает абсолютный цвет из параметров
//
Функция ПолучитьАбсолютныйЦветИзПараметров(ПереданныеПараметры, Имя1,Имя2)
	
	Цвет = WebЦвета.ЗеленыйЛес;
	Если ПереданныеПараметры.Свойство(Имя1) Тогда
		Попытка
			Цвет = WebЦвета[ПереданныеПараметры[Имя1]];
		Исключение
			Ванесса.СообщитьПользователю(Ванесса.Локализовать(ОписаниеОшибки()));
		КонецПопытки;
	ИначеЕсли ПереданныеПараметры.Свойство(Имя2) Тогда
		Попытка
			Цвет = WebЦвета[ПереданныеПараметры[Имя1]];
		Исключение
			Ванесса.СообщитьПользователю(Ванесса.Локализовать(ОписаниеОшибки()));
		КонецПопытки;
	КонецЕсли;	 
	АбсолютныйЦвет = Ванесса.АбсолютыйЦвет(Цвет);
	
	Возврат АбсолютныйЦвет;
	
КонецФункции   

&НаКлиенте
// Обработка отрисовки: "ФигураX" "ФигураY" "ФигураW" "ФигураH"
Функция ОбработкаОтрисовкиФигурыПоКоординатам(ФигураX,ФигураY,ФигураW,ФигураH, ТабПараметрыРисования, ИмяПроцедуры, ТекстНадписи = Неопределено)
	
	//сообщить(ФигураX);сообщить(ФигураY);сообщить(ФигураW);сообщить(ФигураH); сообщить(ИмяПроцедуры); сообщить(ТекстНадписи);
	Left 	= Число(ФигураX);
	Top 	= Число(ФигураY);
	Right 	= Left + Число(ФигураW);
	Bottom 	= Top + Число(ФигураH);
	
	ДопПараметры = Неопределено;

	Если Left <= Right И Top <= Bottom Тогда
		
		Ванесса.ЗапретитьВыполнениеШагов();
		
		НастройкиРисованияПоУмолчанию = Ванесса.ПолучитьНастройкиРисования();
		НастройкиРисования = Ванесса.ДополнитьПараметрыОтрисовкиПереданныеПользователем(НастройкиРисованияПоУмолчанию, ПараметрыРисования(ТабПараметрыРисования));
		НастройкиРисованияJSON = Ванесса.ЗаписатьОбъектJSON(НастройкиРисования); 
		ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещениеСПродолжениемВыполненияСценария", ЭтаФорма, ДопПараметры); 
		
		ТекстПроцедуры = 
		"Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовНарисоватьПрямоугольник(
		|	ОписаниеОповещения,
		|	НастройкиРисованияJSON,
		|	Left - НастройкиРисования.thickness,
		|	Top - НастройкиРисования.thickness,
		|	Right - Left + НастройкиРисования.thickness*2,
		|	Bottom - Top + НастройкиРисования.thickness*2   
		|	,ТекстНадписи);";   
		
		ТекстПроцедуры = СтрЗаменить(ТекстПроцедуры, 
			".НачатьВызовНарисоватьПрямоугольник(", 
			"." + ИмяПроцедуры + "(");
		
		Если ТекстНадписи = Неопределено Тогда
			ТекстПроцедуры = СтрЗаменить(ТекстПроцедуры, 
				",ТекстНадписи", "");
		КонецЕсли;
		
		Выполнить(ТекстПроцедуры);
		
	КонецЕсли;	 
	
КонецФункции  

&НаКлиенте
// Обработка надписи: "ТочкаX" "ТочкаY" "Подсказка"
Функция ОбработкаОтрисовкиНадписиПоТочкам(ТочкаX,ТочкаY,ТекстНадписи,ТабПарам, ИмяПроцедуры)
	
	Left 	= Число(ТочкаX);
	Top 	= Число(ТочкаY);
	
	Ванесса.ЗапретитьВыполнениеШагов();
	НастройкиРисованияПоУмолчанию = Ванесса.ПолучитьНастройкиРисования();
	НастройкиРисования = Ванесса.ДополнитьПараметрыОтрисовкиПереданныеПользователем(НастройкиРисованияПоУмолчанию, ПараметрыРисования(ТабПарам));
	НастройкиРисованияJSON = Ванесса.ЗаписатьОбъектJSON(НастройкиРисования); 
	
	ДопПараметры = Неопределено;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещениеСПродолжениемВыполненияСценария", ЭтаФорма, ДопПараметры); 
	
	ТекстПроцедуры = 
	"Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовПоказатьТекст(
	|	ОписаниеОповещения, НастройкиРисованияJSON,
	|	Left, Top, ТекстНадписи)";
		
	ТекстПроцедуры = СтрЗаменить(ТекстПроцедуры, 
		".НачатьВызовПоказатьТекст(", 
		"." + ИмяПроцедуры + "(");
	
	Выполнить(ТекстПроцедуры);
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////


&НаКлиенте
//И Я рисую рамку по координатам 'ФигураX' 'ФигураY' 'ФигураW' 'ФигураH' 'ТабПараметрыРисования'
//@ЯРисуюРамкуПоКоординатам(Парам01,Парам02,Парам03,Парам04,ТабПарам)
Функция ЯРисуюРамкуПоКоординатам(Парам01,Парам02,Парам03,Парам04,ТабПарам) Экспорт
	ОбработкаОтрисовкиФигурыПоКоординатам(Парам01,Парам02,Парам03,Парам04, ТабПарам, "НачатьВызовНарисоватьПрямоугольник");
КонецФункции

&НаКлиенте
//И Я рисую эллипс по координатам 'ФигураX' 'ФигураY' 'ФигураW' 'ФигураH' 'ТабПараметрыРисования'
//@ЯРисуюЭллипсПоКоординатам(Парам01,Парам02,Парам03,Парам04,ТабПарам)
Функция ЯРисуюЭллипсПоКоординатам(Парам01,Парам02,Парам03,Парам04,ТабПарам) Экспорт
	ОбработкаОтрисовкиФигурыПоКоординатам(Парам01,Парам02,Парам03,Парам04, ТабПарам, "НачатьВызовНарисоватьЭллипс");
КонецФункции

&НаКлиенте
//И Я рисую тень по координатам 'ФигураX' 'ФигураY' 'ФигураW' 'ФигураH' текст надписи 'ТекстНадписи' 'ТабПараметрыРисования'
//@ЯРисуюТеньПоКоординатамТекстНадписи(Парам01,Парам02,Парам03,Парам04,ТекстНадписи,ТабПарам)
Функция ЯРисуюТеньПоКоординатамТекстНадписи(Парам01,Парам02,Парам03,Парам04,ТекстНадписи,ТабПарам) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ОбработкаОтрисовкиФигурыПоКоординатам(Парам01,Парам02,Парам03,Парам04, ТабПарам, "НачатьВызовНарисоватьТень", ТекстНадписи);
КонецФункции

&НаКлиенте
//И Я рисую надпись по точкам 'ФигураX' 'ФигураY' текст надписи 'ТекстНадписи' 'ТабПараметрыРисования'
//@ЯРисуюНадписьПоТочкамТекстНадписи(Парам01,Парам02,ТекстНадписи,ТабПарам)
Функция ЯРисуюНадписьПоТочкамТекстНадписи(Парам01,Парам02,ТекстНадписи,ТабПарам) Экспорт  
	ОбработкаОтрисовкиНадписиПоТочкам(Парам01,Парам02,ТекстНадписи,ТабПарам, "НачатьВызовПоказатьТекст");
КонецФункции

&НаКлиенте
//И Я рисую подсказку-балон по точкам 'ФигураX' 'ФигураY' текст надписи 'ТекстНадписи' 'ТабПараметрыРисования'
//@ЯРисуюПодсказку_балонПоТочкамТекстНадписи(Парам01,Парам02,Парам03,Парам04)
Функция ЯРисуюПодсказку_балонПоТочкамТекстНадписи(Парам01,Парам02,Парам03,ТабПарам) Экспорт
	ОбработкаОтрисовкиНадписиПоТочкам(Парам01,Парам02,Парам03,ТабПарам, "НачатьВызовПоказатьПодсказку");
КонецФункции
