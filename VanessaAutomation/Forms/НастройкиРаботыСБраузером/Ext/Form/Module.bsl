
#Область ОписаниеПеременных

&НаКлиенте
Перем Ванесса;

#КонецОбласти

&НаКлиенте
Процедура ЗапуститьБраузер(Команда)
	
	СтрокаКоманды = """" + ИнтернетБраузер + """ about:blank --remote-debugging-port=" + Формат(ПортБраузера, "ЧГ=");
	НачатьЗапускПриложения(Новый ОписаниеОповещения, СтрокаКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтернетБраузерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбранФайлБраузера", ЭтотОбъект);
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранФайлБраузера(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		Для каждого ЭлементМассива Из ВыбранныеФайлы Цикл
			ИнтернетБраузер = ЭлементМассива;
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаголовокКоманды(ИмяКоманды)
	
	Возврат Команды.Найти(ИмяКоманды).Заголовок;
	
КонецФункции

&НаКлиенте
Процедура ОшибкаБраузера(Команда)
	
	ИнформационныйТекст =
		"Перед вызовом команды «" + ЗаголовокКоманды(Команда.Имя) + "»
		|закройте все открытые окна Google Chrome
		|и запустите снова кнопкой «Запустить браузер».";
	ПоказатьПредупреждение( , ИнформационныйТекст, 10);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьURL(Команда)
	
	HTTPЗапрос = Новый HTTPЗапрос("/json/new?" + АдресВебКлиента);
	HTTPСоединение = Новый HTTPСоединение("localhost", 9222, , , , 10);
	Попытка
		HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
	Исключение
		ОшибкаБраузера(Команда);
		Возврат;
	КонецПопытки;
	ТекстJSON = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	АдресВебСокет = ДанныеJSON.webSocketDebuggerUrl;
	
	ОписаниеОповещения = Новый ОписаниеОповещения;
	Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовОткрытьВебСокет(ОписаниеОповещения, АдресВебСокет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьJavaSctipt(Команда)
	
	ПараметрыМетода = Новый Структура("expression", ТекстJavaScript);
	ДанныеJSON = Новый Структура("id,method,params", 1, "Runtime.evaluate", ПараметрыМетода);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеJSON);
	КомандаJSON = ЗаписьJSON.Закрыть();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВызовJavaSctipt", ЭтотОбъект);
	Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовПослатьВебСокет(ОписаниеОповещения, КомандаJSON);
	
КонецПроцедуры

&НаКлиенте
Процедура ВызовJavaSctipt(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	РезультатJSON = РезультатВызова;
	
КонецПроцедуры

&НаКлиенте
Процедура СнимокЭкранаБраузера(Команда)
	
	ПараметрыМетода = Новый Структура("format,quality,fromSurface", "png", 85, Ложь);
	ДанныеJSON = Новый Структура("id,method,params", 1, "Page.captureScreenshot", ПараметрыМетода);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеJSON);
	КомандаJSON = ЗаписьJSON.Закрыть();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолученСнимокБраузера", ЭтотОбъект);
	Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовВебСокет(ОписаниеОповещения, АдресВебСокет, КомандаJSON);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученСнимокБраузера(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(РезультатВызова);
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	Если ДанныеJSON.Свойство("result") Тогда
		ДвоичныеДанные = Base64Значение(ДанныеJSON.result.data);
		ДанныеКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		//Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаКартинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФигурыПриИзменении(Элемент)   
	
	Если ТипФигуры = "Надпись" Тогда 
		
		Width = 0;
		Height = 0;
		Элементы.Width.Видимость = Ложь;
		Элементы.Height.Видимость = Ложь;
		Элементы.НадписьТекст.Видимость = Истина;
		
		ТекстШаблона = "{
		|    let node = document.createElement('div');
		|    node.innerHTML = 
		|    '%НадписьТекст%';
		|    node.style.fontSize = '100%';
		|    node.style.position = 'fixed';
		|    node.style.zIndex = 999999;
		|    node.style.left = '%ТочкаX%px';
		|    node.style.top = '%ТочкаY%px';
		|    node.style.color = 'red';
		|    node.style.backgroundColor = '#11ffee00';
		|    node.style.padding = '1em';
		|    window.top.document.body.appendChild(node);
		|    setTimeout(() => { if (node) node.remove() }, 10000);
		|};";   
		ПараметрыОтрисовки = Новый Структура("ТочкаX,ТочкаY,НадписьТекст", ТочкаX,ТочкаY,НадписьТекст);
		
	Иначе  
		
		Элементы.Width.Видимость = Истина;
		Элементы.Height.Видимость = Истина;
		Элементы.НадписьТекст.Видимость = Ложь;
		
		ТекстШаблона = "{
		|    let node = document.createElement('div');
		|    node.style.fontSize = '100%';
		|    node.style.position = 'fixed';
		|    node.style.zIndex = 999999;
		|    node.style.left = '%ТочкаX%px';
		|    node.style.top = '%ТочкаY%px';
		|    node.style.width = '%Width%px';
		|    node.style.height = '%Height%px';
		|    node.style.borderWidth = '%borderWidth%';
		|    node.style.borderStyle = 'solid';
		|    node.style.borderColor = '%borderColor%';
		|    node.style.backgroundColor = '#11ffee00';
		|    node.style.padding = '1em';
		|    node.style.borderRadius = '1em';
		|    window.top.document.body.appendChild(node);
		|    setTimeout(() => { if (node) node.remove() }, 10000);
		|};";
		ПараметрыОтрисовки = Новый Структура("ТочкаX,ТочкаY,Width,Height", ТочкаX,ТочкаY,Width,Height);
				
	КонецЕсли; 
	
	ТекстJavaScript = ТекстШаблона;
	
	Для Каждого СтрокаПарам Из ПараметрыОтрисовки Цикл
		ТекстJavaScript = СтрЗаменить(ТекстJavaScript, "%"+СтрокаПарам.Ключ+"%", СтрокаПарам.Значение)
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ИнициализацияФормы(ВладелецФормы) Экспорт
	Ванесса = ВладелецФормы;
КонецФункции

&НаКлиенте
Процедура НайтиБраузер(ПараметрыПоиска)
	
	Если ПараметрыПоиска.Варианты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ПараметрыПоиска.Варианты[0];
	ПараметрыПоиска.Варианты.Удалить(0);
	
	Если ПараметрыПоиска.ЭтоWindows Тогда
		Попытка
			Shell = Новый COMОбъект("WScript.Shell");
			ИмяФайла = Shell.ExpandEnvironmentStrings(ИмяФайла);
		Исключение
			//Ничего не делаем
		КонецПопытки;
	КонецЕсли;
	
	Файл = Новый Файл(ИмяФайла);
	ПараметрыПоиска.Вставить("ПолноеИмя", Файл.ПолноеИмя);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаСуществованияФайла", ЭтотОбъект, ПараметрыПоиска);
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществованияФайла(Существует, ДополнительныеПараметры) Экспорт
	
	Если Существует Тогда
		ИнтернетБраузер = ДополнительныеПараметры.ПолноеИмя;
	Иначе
		НайтиБраузер(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТипФигуры = "Надпись";
	ФигурыПриИзменении(Неопределено);   
	
	СисИнфо = Новый СистемнаяИнформация;
	Варианты = Новый Массив;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ИмяФайлаБраузера = "\Google\Chrome\Application\chrome.exe";
		Варианты.Добавить("C:\Program Files" + ИмяФайлаБраузера);
		Варианты.Добавить("%ProgramFiles%" + ИмяФайлаБраузера);
		Варианты.Добавить("%ProgramFiles(x86)%" + ИмяФайлаБраузера);
		Варианты.Добавить("%LocalAppData%" + ИмяФайлаБраузера);
		ЭтоWindows = Истина;
	Иначе
		КоманднаяСтрока = "ping 127.0.0.1 -n 3";
		Варианты.Добавить("/snap/bin/chromium");
		Варианты.Добавить("/opt/google/chrome/chrome");
		ЭтоWindows = Ложь;
	КонецЕсли;
	
	ПараметрыПоиска = Новый Структура("ЭтоWindows,Варианты", ЭтоWindows, Варианты);
	НайтиБраузер(ПараметрыПоиска);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПортБраузера = 9222;
	
	ТочкаX = 200;
	ТочкаY = 200;
	Width = 600;
	Height = 300;
	НадписьТекст = "Для оплаты нажать ====>";
	
КонецПроцедуры

